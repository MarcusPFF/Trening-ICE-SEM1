@startuml
!pragma layout smetana


Main --> JFrameGUI
JFrameGUI *-- LoginPage
LoginPage *-- Menu
WorkoutPage *-- HomePage
HomePage *-- Workout
Menu *-- WorkoutPage
Menu *-- AccountPage
Menu *-- OrderTrenPage
Account --* AccountPage
WorkoutPage *-- Exercises
"util" *--* Menu
"util" --* Exercises
Sets --* Exercises

class Main {
package JFrame.JFrameGUI
- JFrameGUI JFrameGUI = new JFrameGUI();
+ static void main(String[] args)
JFrameGUI.launchGUI()

}
package JFrame{
class JFrameGUI extends JFrame  {
+ void launchGUI()
+ void createMenuGUI()
+ void createLoginGUI()
+ void createWorkoutGUI()
+ void currentTrainingGUI()
+ void createOrderTrenGUI()
+ void createHomeGUI()
+ void createAccountGUI()
- JButton createModernButton(String text)
- JPanel createModernPanel(String labelText)
}
}

class LoginPage {
# Menu menu

' Constructor
+ loginPage()

' Metoder
+ void displayLoginPage()
+ void createAccount()[menu.runAlways()]
+ void login()[menu.runAlways()]
+ validateEmail()
+ validatePassword()

}
class Menu {
+ WorkoutPage wp;
+ OrderTrenPage ot;
+ AccountPage ap;
+ AccountMapper am;
+ ExercisesMapper em;
+ menu()
+ void runAlways()
 wp.ct.hp.HomePage()
 wp.WorkoutPage()
 ot.OrderTrenPage()
 ap.AccountPage()


}
class HomePage{
+ Workout wo
+ homePage()
+ void editTraining()
+ void displayTrainingHistory()
}
class WorkoutPage {
+ workoutPage()
+ Exercises ex
+ HomePage hp
+ currentTraining()
+ void startTraining()
+ void endTraining()
+ int editReps()
+ float editKg()
+ String editNote()
+ Getter & Setter()



}


class AccountPage {
+ Account acc
+ accountPage()
+ void displayAccountInfo()
+ void setMeasurements()([acc.setInputHeight, acc.setInputWeight])
+ void logOut()

}
class OrderTrenPage {
+ orderTrenPage()
+ void orderTren()

}
class Exercises {
# ExerciseMapper em
+ Exercises(String exerciseName, list<sets> exercise, String note)
+ void addExerciseToTrainingProgram(Exercises exercises)
+ void addSetToExercise(Sets sets)
+ void removeSetsFromExercise()
# String exerciseName
# String note
# List<sets> exercise
# List<Exercises> TrainingProgram
+ Getter og Setter()


}

class Account {
- String email
- String password
- float Weight
- float Height
- int AccountID
+ account(int AccountID, String email, String password, float inputWeight, float inputHeight
+ Getter & Setter()

}
class Sets {
# int reps
# float kg

+ sets(int reps, float kg)
+ Getter & Setter()
}

class Workout {
# String ProgramName;
# protected float ProgramDate;
# protected int ProgramID;
# List<Workout> EarlierWorkouts;
+ Workout(String ProgramName, float ProgramDate, int ProgramID)
+ void addWorkoutToEarlierWorkouts(Workout workout)
+ void addWorkoutToDefaultWorkoutPrograms(Workout workout)
}

package "util" {
class AccountMapper {
- Menu menu;
- Connection connect;

+ accountMapper()

+ void connect(String url)

+List<Account> loadAccountData()
+List<Account> saveAccountData()
}


class ExercisesMapper {
- Exercises ex;
- Workout wo;
- Menu menu;
- Connection connect;

+ exerciseMapper()
+ void connect(String url)
+ List<exercises> loadExercisesData()
+ List<exercises> saveExercisesData()
+ List<Workout> loadEarlierWorkouts()
+ List<Exercises> loadSpecificExerciseData()
+ List<Exercises> loadLastExerciseData()
+ void loadDefaultWorkoutPrograms()
+ void loadEarlierWorkouts()
+ void loadSpecificExerciseData()
+ void loadLastExerciseData()
}

}
@enduml